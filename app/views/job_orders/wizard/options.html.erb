<section class="container">
  <%= form_for([@job_order, @job_task], url: job_order_job_task_path(@job_order, @job_task, step: 3), html: { multipart: true }) do |f| %>
    <div class="text-center">
      <h2><%= t('job_orders.wizard.title', step: 3) %></h2>

      <div class="form-group col-lg-6 mx-auto">
        <% @options.each do |o| %>
          <% is_job_wide = o.is_job_wide %>
          <% option_used_in_other_task = is_job_wide && @job_order.job_tasks.where.not(id: @job_task.id).joins(:job_options).where(job_options: { id: o.id }).exists? %>
          
          <div class="my-3 card p-2">
            <div class="form-check-inline">
              <% if o.description.present? %>
                <p><%= o.description.html_safe %></p>
              <% end %>
              
              <% if is_job_wide %>
                <span class="badge bg-info ms-2"><%= t('job_orders.wizard.step_3.job_wide_option') %></span>
              <% end %>
              
              <%= check_box_tag "job_task[job_task_options_attributes][][job_option_id]", 
                  o.id, 
                  @job_task.job_options.include?(o),
                  id: "job_task_option_#{o.id}",
                  class: 'form-check-input option-checkbox',
                  data: { 'file-required': o.need_files, 'option-id': o.id },
                  disabled: option_used_in_other_task %>
              <%= label_tag "job_task_option_#{o.id}", "#{o.name} (#{number_to_currency(o.fee)})", class: 'form-check-label' %>
            </div>

            <% if option_used_in_other_task %>
              <div class="alert alert-warning mt-2 mb-0">
                <%= t('job_orders.wizard.step_3.option_already_selected') %>
                <%= link_to t('job_orders.wizard.step_3.remove_from_other_task'), 
                    edit_job_order_job_task_path(@job_order, @job_order.job_tasks.joins(:job_options).where(job_options: { id: o.id }).where.not(id: @job_task.id).first, step: 3) %>
              </div>
            <% end %>

            <% if o.need_files && !option_used_in_other_task %>
              <div class="custom-file mt-2">
                <%= file_field_tag "job_task[job_task_options_attributes][][option_file]", 
                    class: 'form-control option-file mt-2', 
                    data: { option: o.id },
                    id: "job_task_option_file_#{o.id}"
                %>
              </div>

              <% if existing_option = @job_task.job_task_options.find_by(job_option_id: o.id) %>
                <% if existing_option.option_file.attached? %>
                  <div class="text-start pt-2">
                    <ul class="list-group">
                      <li class="list-group-item text-center text-muted">
                        <%= t('job_orders.wizard.step_3.by_unchecking') %>
                      </li>
                      <li class="list-group-item me-1 d-flex justify-content-between align-items-center">
                        <p><%= existing_option.option_file.filename %></p>
                        <div class="text-end">
                          <%= link_to "<i class='fa fa-download'></i>".html_safe, rails_blob_path(existing_option.option_file, disposition: 'attachment') %>
                        </div>
                      </li>
                    </ul>
                  </div>
                <% end %>
              <% end %>
            <% end %>
          </div>
        <% end %>

        <% if @options.count == 0 %>
          <div class="alert alert-warning">
            <%= t('job_orders.wizard.step_3.no_options') %>
          </div>
        <% end %>
      </div>

      <div class="text-center">
        <%= link_to t('job_orders.wizard.previous_step'), edit_job_order_job_task_path(@job_order, @job_task, step: 2), class: 'btn btn-primary mb-1' %>
        <%= f.submit t('job_orders.wizard.next_step'), class: 'btn btn-primary mb-1' %>
      </div>
    </div>
  <% end %>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll(".option-file").forEach((input) => {
      input.addEventListener('change', () => {
        const optionId = input.dataset.option;
        document.getElementById(`job_task_option_${optionId}`).checked = true;
      });
    });

    document.querySelectorAll(".option-checkbox").forEach((input) => {
      if (input.dataset.fileRequired === 'true') {
        input.addEventListener('change', () => {
          const optionId = input.dataset.optionId;
          const fileInput = document.getElementById(`job_task_option_file_${optionId}`);
          if (fileInput) {
            fileInput.required = input.checked;
          }
        });
      }
    });
  });
</script>